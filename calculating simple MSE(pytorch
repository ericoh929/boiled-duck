{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled5.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMk0SNJtk5kpX0/cHgWqiJL",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ericoh929/boiled-duck/blob/main/calculating%20simple%20MSE(pytorch\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XnqW6hFdmJsf"
      },
      "source": [
        "import torch\n",
        "import numpy as np"
      ],
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HeA331EQmL_-",
        "outputId": "cfe0746e-a950-4353-a099-352baf9d77a1"
      },
      "source": [
        "print(torch.__version__)"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1.8.1+cu101\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zV2fMhV9mNzn"
      },
      "source": [
        "w = 1.0\n",
        "\n",
        "def forward(x):\n",
        "    return x*w"
      ],
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DPP44NdeqCtd"
      },
      "source": [
        "#loss function\n",
        "\n",
        "def loss(x, y):\n",
        "    pred = forward(x)\n",
        "    return (pred - y)**2"
      ],
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8ybu2RS8sivP"
      },
      "source": [
        "x_data = [1, 2, 3]\n",
        "y_data = [3, 6, 9]"
      ],
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x-bfmNYBqcbq",
        "outputId": "dfe4efac-331c-4a3d-bef5-2732df5b81d2"
      },
      "source": [
        "w_list = []\n",
        "mse_list = []\n",
        "\n",
        "for w in np.arange(0.0, 4.1, 0.1):\n",
        "    print(\"w = \", w)\n",
        "    l_sum = 0\n",
        "    for x_val, y_val in zip(x_data, y_data):\n",
        "        pred = forward(x_val)\n",
        "        l = loss(x_val, y_val)\n",
        "        l_sum += l\n",
        "        print(\"\\t x_val: {:.3f}, y_val: {:.3f}, pred: {:.3f}, loss: {:.3f}\".format(x_val, y_val, pred, l))\n",
        "    print(\"MSE: {:.3f}\\n\".format(l_sum / 3))\n",
        "    w_list.append(w)\n",
        "    mse_list.append(l_sum/3)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "w =  0.0\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.000, loss: 9.000\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 0.000, loss: 36.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 0.000, loss: 81.000\n",
            "MSE: 42.000\n",
            "\n",
            "w =  0.1\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.100, loss: 8.410\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 0.200, loss: 33.640\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 0.300, loss: 75.690\n",
            "MSE: 39.247\n",
            "\n",
            "w =  0.2\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.200, loss: 7.840\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 0.400, loss: 31.360\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 0.600, loss: 70.560\n",
            "MSE: 36.587\n",
            "\n",
            "w =  0.30000000000000004\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.300, loss: 7.290\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 0.600, loss: 29.160\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 0.900, loss: 65.610\n",
            "MSE: 34.020\n",
            "\n",
            "w =  0.4\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.400, loss: 6.760\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 0.800, loss: 27.040\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 1.200, loss: 60.840\n",
            "MSE: 31.547\n",
            "\n",
            "w =  0.5\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.500, loss: 6.250\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 1.000, loss: 25.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 1.500, loss: 56.250\n",
            "MSE: 29.167\n",
            "\n",
            "w =  0.6000000000000001\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.600, loss: 5.760\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 1.200, loss: 23.040\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 1.800, loss: 51.840\n",
            "MSE: 26.880\n",
            "\n",
            "w =  0.7000000000000001\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.700, loss: 5.290\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 1.400, loss: 21.160\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 2.100, loss: 47.610\n",
            "MSE: 24.687\n",
            "\n",
            "w =  0.8\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.800, loss: 4.840\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 1.600, loss: 19.360\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 2.400, loss: 43.560\n",
            "MSE: 22.587\n",
            "\n",
            "w =  0.9\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 0.900, loss: 4.410\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 1.800, loss: 17.640\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 2.700, loss: 39.690\n",
            "MSE: 20.580\n",
            "\n",
            "w =  1.0\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.000, loss: 4.000\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 2.000, loss: 16.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 3.000, loss: 36.000\n",
            "MSE: 18.667\n",
            "\n",
            "w =  1.1\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.100, loss: 3.610\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 2.200, loss: 14.440\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 3.300, loss: 32.490\n",
            "MSE: 16.847\n",
            "\n",
            "w =  1.2000000000000002\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.200, loss: 3.240\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 2.400, loss: 12.960\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 3.600, loss: 29.160\n",
            "MSE: 15.120\n",
            "\n",
            "w =  1.3\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.300, loss: 2.890\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 2.600, loss: 11.560\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 3.900, loss: 26.010\n",
            "MSE: 13.487\n",
            "\n",
            "w =  1.4000000000000001\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.400, loss: 2.560\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 2.800, loss: 10.240\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 4.200, loss: 23.040\n",
            "MSE: 11.947\n",
            "\n",
            "w =  1.5\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.500, loss: 2.250\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 3.000, loss: 9.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 4.500, loss: 20.250\n",
            "MSE: 10.500\n",
            "\n",
            "w =  1.6\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.600, loss: 1.960\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 3.200, loss: 7.840\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 4.800, loss: 17.640\n",
            "MSE: 9.147\n",
            "\n",
            "w =  1.7000000000000002\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.700, loss: 1.690\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 3.400, loss: 6.760\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 5.100, loss: 15.210\n",
            "MSE: 7.887\n",
            "\n",
            "w =  1.8\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.800, loss: 1.440\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 3.600, loss: 5.760\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 5.400, loss: 12.960\n",
            "MSE: 6.720\n",
            "\n",
            "w =  1.9000000000000001\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 1.900, loss: 1.210\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 3.800, loss: 4.840\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 5.700, loss: 10.890\n",
            "MSE: 5.647\n",
            "\n",
            "w =  2.0\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.000, loss: 1.000\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 4.000, loss: 4.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 6.000, loss: 9.000\n",
            "MSE: 4.667\n",
            "\n",
            "w =  2.1\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.100, loss: 0.810\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 4.200, loss: 3.240\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 6.300, loss: 7.290\n",
            "MSE: 3.780\n",
            "\n",
            "w =  2.2\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.200, loss: 0.640\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 4.400, loss: 2.560\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 6.600, loss: 5.760\n",
            "MSE: 2.987\n",
            "\n",
            "w =  2.3000000000000003\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.300, loss: 0.490\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 4.600, loss: 1.960\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 6.900, loss: 4.410\n",
            "MSE: 2.287\n",
            "\n",
            "w =  2.4000000000000004\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.400, loss: 0.360\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 4.800, loss: 1.440\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 7.200, loss: 3.240\n",
            "MSE: 1.680\n",
            "\n",
            "w =  2.5\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.500, loss: 0.250\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 5.000, loss: 1.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 7.500, loss: 2.250\n",
            "MSE: 1.167\n",
            "\n",
            "w =  2.6\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.600, loss: 0.160\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 5.200, loss: 0.640\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 7.800, loss: 1.440\n",
            "MSE: 0.747\n",
            "\n",
            "w =  2.7\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.700, loss: 0.090\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 5.400, loss: 0.360\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 8.100, loss: 0.810\n",
            "MSE: 0.420\n",
            "\n",
            "w =  2.8000000000000003\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.800, loss: 0.040\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 5.600, loss: 0.160\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 8.400, loss: 0.360\n",
            "MSE: 0.187\n",
            "\n",
            "w =  2.9000000000000004\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 2.900, loss: 0.010\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 5.800, loss: 0.040\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 8.700, loss: 0.090\n",
            "MSE: 0.047\n",
            "\n",
            "w =  3.0\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.000, loss: 0.000\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 6.000, loss: 0.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 9.000, loss: 0.000\n",
            "MSE: 0.000\n",
            "\n",
            "w =  3.1\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.100, loss: 0.010\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 6.200, loss: 0.040\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 9.300, loss: 0.090\n",
            "MSE: 0.047\n",
            "\n",
            "w =  3.2\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.200, loss: 0.040\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 6.400, loss: 0.160\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 9.600, loss: 0.360\n",
            "MSE: 0.187\n",
            "\n",
            "w =  3.3000000000000003\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.300, loss: 0.090\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 6.600, loss: 0.360\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 9.900, loss: 0.810\n",
            "MSE: 0.420\n",
            "\n",
            "w =  3.4000000000000004\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.400, loss: 0.160\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 6.800, loss: 0.640\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 10.200, loss: 1.440\n",
            "MSE: 0.747\n",
            "\n",
            "w =  3.5\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.500, loss: 0.250\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 7.000, loss: 1.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 10.500, loss: 2.250\n",
            "MSE: 1.167\n",
            "\n",
            "w =  3.6\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.600, loss: 0.360\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 7.200, loss: 1.440\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 10.800, loss: 3.240\n",
            "MSE: 1.680\n",
            "\n",
            "w =  3.7\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.700, loss: 0.490\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 7.400, loss: 1.960\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 11.100, loss: 4.410\n",
            "MSE: 2.287\n",
            "\n",
            "w =  3.8000000000000003\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.800, loss: 0.640\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 7.600, loss: 2.560\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 11.400, loss: 5.760\n",
            "MSE: 2.987\n",
            "\n",
            "w =  3.9000000000000004\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 3.900, loss: 0.810\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 7.800, loss: 3.240\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 11.700, loss: 7.290\n",
            "MSE: 3.780\n",
            "\n",
            "w =  4.0\n",
            "\t x_val: 1.000, y_val: 3.000, pred: 4.000, loss: 1.000\n",
            "\t x_val: 2.000, y_val: 6.000, pred: 8.000, loss: 4.000\n",
            "\t x_val: 3.000, y_val: 9.000, pred: 12.000, loss: 9.000\n",
            "MSE: 4.667\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rDGaIq1hsWx_"
      },
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "M-GeJDdluse4",
        "outputId": "4dfa006f-b605-42a7-e3a1-0eac9c6c26f6"
      },
      "source": [
        "plt.plot(w_list, mse_list, 'g^')\n",
        "plt.title('Loss function')\n",
        "plt.xlabel(\"weight\")\n",
        "plt.ylabel(\"loss\")\n",
        "plt.show()"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8H9Zr3ciuzZX"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}